CREATE TABLE `conversation` (
  id INTEGER NOT NULL PRIMARY KEY,
  title TEXT NOT NULL,
  type TEXT NOT NULL,
  creator TEXT NOT NULL,
  created_at INTEGER NOT NULL DEFAULT 0,
  updated_at INTEGER NOT NULL DEFAULT 0,

  FOREIGN KEY (creator) REFERENCES user(id)
);

findAll:
SELECT *
FROM `conversation`
ORDER BY updated_at DESC;

findById:
SELECT *
FROM `conversation`
WHERE id = :id;

findConversationWithUser:
SELECT conversation.*
FROM conversation
JOIN participant ON conversation.id = participant.conversation
WHERE participant.user = :userId AND conversation.type = :type LIMIT 1;

findConversationWithUsers:
SELECT c.*
FROM conversation c
JOIN participant p ON c.id = p.conversation
WHERE p.user IN :userIds AND c.type =:type
GROUP BY c.id
HAVING COUNT(DISTINCT p.user) = :size
AND COUNT(DISTINCT p.conversation) = 1
AND NOT EXISTS (
    SELECT *
    FROM participant p2
    WHERE p2.conversation = c.id
    AND p2.user NOT IN :userIds
)
LIMIT 1;

upsert {
  UPDATE `conversation`
  SET title = :title,
      updated_at = :updated_at
  WHERE id = :id;

  INSERT OR IGNORE INTO `conversation`(
    id,
    title,
    type,
    creator,
    created_at,
    updated_at
  )
  VALUES (
    :id,
    :title,
    :type,
    :creator,
    :created_at,
    :updated_at
  );
}

deleteById:
DELETE FROM `conversation`
WHERE id = :id;

deleteAll:
DELETE FROM `conversation`;